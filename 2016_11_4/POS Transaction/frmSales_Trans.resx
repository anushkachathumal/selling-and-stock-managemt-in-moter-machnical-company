<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UpSgo/I1z3+UPwIpdw3ajaaPs32/nI+RJ9UK7fmGuhTUP60ujf03h0sSjMqDtYuWS6DOnf7wyPDmKDT3
        UV0pFrdG0lbEVyQFPgsoBC59GHd9+n1rpBeVcSq5RgRkMpBB8QR/jmuwOhvGPpdjb3B5yQqWx94d1v6w
        agyl1bh1ZGAKsCCDyIPMGoQOrURmQWt7cW8cow8alGXHLALDUNtuZI8+VT6lRqFZrE+Ua6H9EY7BHWN3
        cuwJL6fAYGAqjAry8Z6BQXM/0h57kSAgoUkUCLHIIChwM5O+eZ91S+lNRrR2xrT4RwkKFyTgAZbmcY3O
        MbnnUV430BinuBdxzy2832nhK97bTkhgcNp2z4jHlUxpUzG0zWJhiOj/AAGK0hWGIHAJLMxyzsdyzEAZ
        Yn0ArCcY6AxTXJu4p5raY+00JTvbYyQynBxscc8DI2FTKlRqEdsMHwno7Hb2otoSyLpYawQZMtzfVjGv
        O+cYz4Vh7Dq7ggZ2huLpGkBDsJVy2SSc5Tnkk58zU0pTUE1hFujHQqGxctBJNhhhkd1KE8g2NAOQNhv4
        nnUoFVpUpiIjw+c8QYFSAQdiDyI8agcvVhGsjPbXdxbq4wyRlcYOcgEjIG+wOceHlWwKVExsmsTyxHAO
        AQ2cQhgXC5JYscs7HGWY+LH/AErCXnV/DJc/SmuLrtQco4kTKY1YC5j2UaiMfnGplSmjthi+OcEjurd7
        eXOhwASDhgQQQwOOYIB/3isN0T6Dw2LmRZJJZDGIw8pU6EB1BECgaVzuR4nHkKltWSNimvU7YQnrZhV7
        JYiMtJdW6J5gs+5H7OupnBCFCqNgFAHwAH+Fa94vxiG/4lZW8LaxBNJNNswAMSlQO8BkavEbbjetjioj
        yrXmZlWlKVZcpSlApSlAqySr6UGoul3UxDc3JngnECyNmVCpYZJ7xTB7udyQdsmtm8B4TFa28VvFnREg
        Vc8zjxPqSSfjXvxVaBSlKBSlKCjHFAarSgUpSgoDVaUoFKUoFKUoFKUoFWSAVfSgj/AeidnaSSSQIQ8m
        dRZmbAzq0rqPdGd9v8KkFKU0a0UpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUp
        SgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUp
        SgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSg//2Q==
</value>
  </data>
</root>